class ManageDeliveries{constructor(){this.data=[],this.dbName="@dbGerenciarEntregas",this.tableContent=document.querySelector("table tbody"),this.buttonSaveDelivery=document.querySelector(".save-delivery"),this.buttonSaveEditDelivery=document.querySelector(".save-edit-delivery"),this.buttonAddDelivery=document.querySelector(".add-delivery"),this.buttonDeliveryEdit=document.querySelector(".delivery-edit"),this.deliveryToEditId=null,this.init()}init(){this.tableContent.innerHTML=null,this.getLocalStorageData(),this.deliveryDelete(),this.buttonAddDelivery.addEventListener("click",t=>{this.buttonSaveEditDelivery.classList.add("hidden"),this.buttonSaveDelivery.classList.remove("hidden")}),this.buttonSaveDelivery.addEventListener("click",t=>{var e=this.getInputByIdValue("input-title"),i=this.getInputByIdValue("input-description"),d=this.getInputByIdValue("input-delivery-date");e&&i&&d&&(d={id:Math.random(Math.floor()),title:e,description:i,deliveryDate:d,delivered:!1},d=[...this.data,d],this.setLocalStorageData(d))}),this.buttonSaveEditDelivery.addEventListener("click",t=>{const e=this.getInputByIdValue("input-title"),i=this.getInputByIdValue("input-description"),d=this.getInputByIdValue("input-delivery-date");var a;e&&i&&d&&(a=this.data.map(t=>t.id===this.deliveryToEditId?{...t,title:e,description:i,deliveryDate:d}:t),this.setLocalStorageData(a),this.deliveryToEditId=null)})}getLocalStorageData(){var t=JSON.parse(localStorage.getItem(this.dbName));t&&(this.data=t,this.renderTableContent(),this.addEventListenerToDeleteButtons(),this.addEventListenerToEditButtons())}setLocalStorageData(t){localStorage.setItem(this.dbName,JSON.stringify(t)),this.getLocalStorageData()}renderTableContent(){this.tableContent.innerHTML=null,this.data.length<0||this.data.map(t=>{const e=document.createElement("tr");e.innerHTML=`
                <th scope="row">${t.id}</th>
                <td>${t.title}</td>
                <td>${t.description}</td>
                <td>${t.deliveryDate}</td>
                <td>
                    <div class="form-check form-switch">
                        <input 
                            class="form-check-input" 
                            type="checkbox" 
                            role="switch" 
                            id="flexSwitchCheckChecked"
                            ${t.delivered&&"checked"} 
                        >
                    </div>
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <button 
                            class="btn btn-secondary delivery-edit"  
                            delivery-id="${t.id}"
                            type="button"
                            data-bs-toggle="modal" 
                            data-bs-target="#adicionarEntrega">Editar</button>
                        <button class="btn btn-danger delivery-delete" delivery-id="${t.id}">Excluir</button>
                    </div>
                </td>
            `,this.tableContent.append(e)})}getInputByIdValue(t){return document.getElementById(t).value||null}addEventListenerToDeleteButtons(){const t=Array.from(document.querySelectorAll(".delivery-delete"));t.map(t=>{t.addEventListener("click",()=>{this.deliveryDelete(Number(t.getAttribute("delivery-id")))})})}addEventListenerToEditButtons(){const t=Array.from(document.querySelectorAll(".delivery-edit"));t.map(e=>{e.addEventListener("click",()=>{var t=Number(e.getAttribute("delivery-id"));this.buttonSaveEditDelivery.classList.remove("hidden"),this.buttonSaveDelivery.classList.add("hidden"),this.setInputToEdit(t),this.deliveryToEditId=t})})}setInputToEdit(e){var t=this.data.filter(t=>t.id===e)[0];this.setInputValue(t.title,t.description,t.deliveryDate)}deliveryDelete(e){var t=this.data.filter(t=>t.id!==e);this.setLocalStorageData(t)}setInputValue(t,e,i){document.getElementById("input-title").value=t,document.getElementById("input-description").value=e,document.getElementById("input-delivery-date").value=i}}new ManageDeliveries;